# Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

# Triangle	 	Tn=n(n+1)/2	 	1, 3, 6, 10, 15, ...
# Pentagonal	 	Pn=n(3n−1)/2	 	1, 5, 12, 22, 35, ...
# Hexagonal	 	Hn=n(2n−1)	 	1, 6, 15, 28, 45, ...
# It can be verified that T285 = P165 = H143 = 40755.

# Find the next triangle number that is also pentagonal and hexagonal.
from common.helpers import is_pentagonal, is_triangular

# Can use existing is_pentagonal to check. I wonder if I can find formulas for checking is triangular and is hexagonal? 
# Although I'd think I only need triangular as I can then iterate over hexagonal numbers until I find a match as that series will grow fastest

print(is_triangular(1))
print(is_triangular(3))
print(is_triangular(6))

print(is_pentagonal(1))
print(is_pentagonal(5))
print(is_pentagonal(12))

def hexagonal_number_generator():
    n = 1
    while True:
        next_hexagonal = n*(2*n - 1)
        yield(next_hexagonal)
        n += 1

count_found = 0
for hexagonal in hexagonal_number_generator():
    if is_pentagonal(hexagonal) and is_triangular(hexagonal):
        print(f"Found number {hexagonal} which is triangular, pentagonal and hexagonal")
        count_found += 1
    if count_found == 3:
        break